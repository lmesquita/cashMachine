@model cashMachine.Models.IndexViewModel

@{
    ViewData["Title"] = "MÃ¡quina de saque";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    try
    {
        <div class="form-horizontal">
            <h4>@ViewBag.Title</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.CashMachine.Num, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CashMachine.Num, new { htmlAttributes = new { @class = "form-control"} })
                    @Html.ValidationMessageFor(model => model.CashMachine.Num, "", new { @clas = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CashMachine.Result, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    <ul style="list-style-type: none">
                        @foreach (var item in Model.CashMachine.Result)
                        {
                            if (item.Qtt == 1) {
                                <li>@item.Qtt nota no valor de R$ @item.Worth</li>
                            }
                            if (item.Qtt > 1) {
                                <li>@item.Qtt notas no valor de R$ @item.Worth</li>
                            }
                        }
                    </ul>
                    
                </div>
            </div>
        </div>
    }
    catch (NullReferenceException e)
    {
        Console.WriteLine(e.Message);
    }

    <button type="submit" class="btn btn-primary">
        Calcular
    </button>
}
